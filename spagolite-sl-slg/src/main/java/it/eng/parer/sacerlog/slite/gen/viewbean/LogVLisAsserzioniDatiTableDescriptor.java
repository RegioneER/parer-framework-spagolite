package it.eng.parer.sacerlog.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Log_V_Lis_Asserzioni_Dati
 *
 */
public class LogVLisAsserzioniDatiTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 16 September 2016 10:28" )
     */

    public static final String SELECT = "Select * from Log_V_Lis_Asserzioni_Dati /**/";
    public static final String TABLE_NAME = "Log_V_Lis_Asserzioni_Dati";
    public static final String COL_ID_OGGETTO_EVENTO = "id_oggetto_evento";
    public static final String COL_NM_TIPO_RECORD = "nm_tipo_record";
    public static final String COL_ID_RECORD = "id_record";
    public static final String COL_TIPO_MODIFICA = "tipo_modifica";
    public static final String COL_ID_ASSERZIONE_DELTA_FOTO = "id_asserzione_delta_foto";
    public static final String COL_PATH = "path";
    public static final String COL_PATH_KEY = "path_key";
    public static final String COL_DS_CHIAVE_TIPO_RECORD = "ds_chiave_tipo_record";
    public static final String COL_ID_RECORD_PADRE = "id_record_padre";
    public static final String COL_LABEL_CAMPO = "label_campo";
    public static final String COL_DS_VALORE_NEW_CAMPO = "ds_valore_new_campo";
    public static final String COL_DS_VALORE_OLD_CAMPO = "ds_valore_old_campo";
    public static final String COL_TIPO_VALORE = "tipo_valore";
    public static final String COL_BL_VALORE_NEW_CAMPO = "bl_valore_new_campo";
    public static final String COL_BL_VALORE_OLD_CAMPO = "bl_valore_old_campo";
    public static final String COL_DS_MODIFICA = "ds_modifica";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_OGGETTO_EVENTO, new ColumnDescriptor(COL_ID_OGGETTO_EVENTO, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_RECORD, new ColumnDescriptor(COL_NM_TIPO_RECORD, Types.VARCHAR, 60, true));
        map.put(COL_ID_RECORD, new ColumnDescriptor(COL_ID_RECORD, Types.DECIMAL, 22, true));
        map.put(COL_TIPO_MODIFICA, new ColumnDescriptor(COL_TIPO_MODIFICA, Types.VARCHAR, 24, true));
        map.put(COL_ID_ASSERZIONE_DELTA_FOTO,
                new ColumnDescriptor(COL_ID_ASSERZIONE_DELTA_FOTO, Types.DECIMAL, 22, true));
        map.put(COL_PATH, new ColumnDescriptor(COL_PATH, Types.VARCHAR, 512, true));
        map.put(COL_PATH_KEY, new ColumnDescriptor(COL_PATH_KEY, Types.VARCHAR, 3072, true));
        map.put(COL_DS_CHIAVE_TIPO_RECORD, new ColumnDescriptor(COL_DS_CHIAVE_TIPO_RECORD, Types.VARCHAR, 256, true));
        map.put(COL_ID_RECORD_PADRE, new ColumnDescriptor(COL_ID_RECORD_PADRE, Types.VARCHAR, 256, true));
        map.put(COL_LABEL_CAMPO, new ColumnDescriptor(COL_LABEL_CAMPO, Types.VARCHAR, 256, true));
        map.put(COL_DS_VALORE_NEW_CAMPO, new ColumnDescriptor(COL_DS_VALORE_NEW_CAMPO, Types.VARCHAR, 4000, true));
        map.put(COL_DS_VALORE_OLD_CAMPO, new ColumnDescriptor(COL_DS_VALORE_OLD_CAMPO, Types.VARCHAR, 4000, true));
        map.put(COL_TIPO_VALORE, new ColumnDescriptor(COL_TIPO_VALORE, Types.VARCHAR, 1, true));
        map.put(COL_BL_VALORE_NEW_CAMPO, new ColumnDescriptor(COL_BL_VALORE_NEW_CAMPO, Types.CLOB, 4000, true));
        map.put(COL_BL_VALORE_OLD_CAMPO, new ColumnDescriptor(COL_BL_VALORE_OLD_CAMPO, Types.CLOB, 4000, true));
        map.put(COL_DS_MODIFICA, new ColumnDescriptor(COL_DS_MODIFICA, Types.VARCHAR, 4000, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
